---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash
  namespace: default
data:
  logstash.conf: |-
    input {
      beats {
        port => 5044
      }
    }
    filter {
      grok {
        match => { "message" => "(%{GREEDYDATA:trash}\s+\[?((?<LOGLEVEL>(INFO|LOG|WARN|ERROR))\]?:?((\s?\[(?<SOURCE>[a-z]+)\])\s)?\s?(([a-z]+\/)?[a-z]+.go:[0-9]+)?\s+|[0-9+] (([a-z]+/)?[a-z_-]+.go:[0-9]+)?]|\[%{TIMESTAMP_ISO8601}\](,[0-9]+)?|\|)|%{DATE_US} %{HOUR}:?%{MINUTE}(?::?%{SECOND}))\s*%{GREEDYDATA:logmessage}
           } 
           }
      mutate {
        remove_field => [ "TIMESTAMP_ISO8601", "YEAR", "MONTHNUM", "MONTHDAY", "HOUR", "MINUTE", "SECOND", "ISO8601_TIMEZONE" ]
             }
           }
    output {
      elasticsearch {
        hosts => "elasticsearch-external.default.svc.cluster.local:9200"
        index => "logstash-%{+YYYY.MM.dd}"
        sniffing => false
      }
      stdout { codec => plain }
    }
  logstash.yml: |-
    http.host: "0.0.0.0"
    path.config: /usr/share/logstash/pipeline
    xpack.monitoring.enabled: false
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: logstash
  namespace: default
spec:
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
      - image: docker.elastic.co/logstash/logstash:6.5.4
        name: logstash
        args:
        - -f
        - /usr/share/logstash/pipeline/logstash.conf
        ports:
        - name: logstash
          containerPort: 5044
          protocol: TCP
        volumeMounts:
        - name: config
          mountPath: /usr/share/logstash/config/logstash.yml
          subPath: logstash.yml
          readOnly: true
        - name: pipeline
          mountPath: /usr/share/logstash/pipeline
          readOnly: true
        - name: localtime
          mountPath: /etc/localtime
        resources:
          limits:
            memory: 4Gi
            cpu: "500m"
          requests:
            memory: 2Gi
            cpu: "200m"
      volumes:
      - name: localtime
        hostPath:
          path: /usr/share/zoneinfo/Europe/Moscow
      - name: pipeline
        configMap:
          name: logstash
          items:
          - key: logstash.conf
            path: logstash.conf
      - name: config
        configMap:
          name: logstash
          items:
          - key: logstash.yml
            path: logstash.yml
---
apiVersion: v1
kind: Service
metadata:
  name: logstash
  namespace: default
  labels:
    app: logstash
spec:
  type: NodePort
  selector:
    app: logstash
  ports:
  - name: logstash
    nodePort: 31113
    port: 5044
    targetPort: 5044
    protocol: TCP
